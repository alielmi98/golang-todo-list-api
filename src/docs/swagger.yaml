definitions:
  github_com_alielmi98_golang-todo-list-api_api_dto.CreateTodoRequest:
    properties:
      completed:
        type: boolean
      description:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  github_com_alielmi98_golang-todo-list-api_api_dto.LoginByUsernameRequest:
    properties:
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  github_com_alielmi98_golang-todo-list-api_api_dto.RegisterUserByUsernameRequest:
    properties:
      email:
        minLength: 6
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 5
        type: string
    required:
    - password
    - username
    type: object
  github_com_alielmi98_golang-todo-list-api_api_dto.TodoResponse:
    properties:
      completed:
        type: boolean
      description:
        type: string
      id:
        type: integer
      title:
        type: string
      userId:
        type: integer
    type: object
  github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse:
    properties:
      error: {}
      result: {}
      resultCode:
        $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.ResultCode'
      success:
        type: boolean
    type: object
  github_com_alielmi98_golang-todo-list-api_api_helper.ResultCode:
    enum:
    - 0
    - 40001
    - 40101
    - 40301
    - 40401
    - 42901
    - 42902
    - 50001
    - 50002
    type: integer
    x-enum-varnames:
    - Success
    - ValidationError
    - AuthError
    - ForbiddenError
    - NotFoundError
    - LimiterError
    - OtpLimiterError
    - CustomRecovery
    - InternalError
info:
  contact: {}
paths:
  /v1/todo/:
    post:
      consumes:
      - application/json
      description: Create a new todo job
      parameters:
      - description: Create a todo
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_dto.CreateTodoRequest'
      responses:
        "201":
          description: Todo response
          schema:
            allOf:
            - $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
            - properties:
                result:
                  $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_dto.TodoResponse'
              type: object
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
      security:
      - AuthBearer: []
      summary: Create a todo
      tags:
      - Todo
  /v1/users/login-by-username:
    post:
      consumes:
      - application/json
      description: LoginByUsername
      parameters:
      - description: LoginByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_dto.LoginByUsernameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
      summary: LoginByUsername
      tags:
      - Users
  /v1/users/register-by-username:
    post:
      consumes:
      - application/json
      description: RegisterByUsername
      parameters:
      - description: RegisterUserByUsernameRequest
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_dto.RegisterUserByUsernameRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
        "400":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
        "409":
          description: Failed
          schema:
            $ref: '#/definitions/github_com_alielmi98_golang-todo-list-api_api_helper.BaseHttpResponse'
      summary: RegisterByUsername
      tags:
      - Users
securityDefinitions:
  AuthBearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
